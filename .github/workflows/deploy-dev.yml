# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and deploy it to a remote server
name:  Deploy Cubicon Dev

on:
  push:
    branches:
      - dev

jobs:
  BuildServer:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js 18
      uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: 'npm'
        cache-dependency-path: ./server/package-lock.json

    - name: Install Deps
      working-directory: ./server
      run: npm ci

    - name: Build server app
      working-directory: ./server 
      run: npm run build --if-present

    - name: Install SSH Key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SSH_PRIVATE_KEY }} 
        known_hosts: 'placeholder'

    - name: Adding Known Hosts
      run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

    - name: Copy source files using Rsync
      run: rsync -avz ./server/dist/ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/cubicon-staging/server/dist

    - name: Copy migration files using Rsync
      run: rsync -avz ./server/prisma/ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/cubicon-staging/server/prisma

    - name: Apply pending migrations and regenerate Prisma client
      uses: appleboy/ssh-action@dce9d565de8d876c11d93fa4fe677c0285a66d78
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        port: ${{ secrets.SSH_PORT }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script_stop: true
        script: |
          cd ../cubicon-staging/server
          npx prisma migrate deploy
          npx prisma generate

  BuildClient:
    runs-on: ubuntu-latest
    environment: dev
    steps:
    - uses: actions/checkout@v3

    - name: Install Deps
      working-directory: ./client
      run: npm ci

    - name: Create .env file
      env:
        REACT_APP_BACKEND_SERVER_URL: '${{ secrets.REACT_APP_BACKEND_SERVER_URL }}'
      working-directory: ./client
      run: |
          touch .env
          echo REACT_APP_BACKEND_SERVER_URL=${{ env.REACT_APP_BACKEND_SERVER_URL }} >> .env
          cat .env

    - name: Build client app
      working-directory: ./client 
      run: npm run build --if-present

    - name: Install SSH Key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SSH_PRIVATE_KEY }} 
        known_hosts: 'placeholder'

    - name: Adding Known Hosts
      run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

    - name: Deploy with rsync
      run: rsync -avz ./client/build/ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/var/www/cubicon-staging/client
